{"version":3,"file":"static/js/48.aa61f1b7.chunk.js","mappings":"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","sources":["Assets/crown.svg","components/Loader/Loader.jsx","store/catogories/catogoriesSelector.js","components/ProductCard/ProducutCard.jsx","components/Shop/Shop.jsx","components/Signin/Signin.jsx","components/Stripe-Payment/FormSchema/FormSchema.jsx","store/user/user.actions.js"],"sourcesContent":["var _desc, _g;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgCrown(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: \"50px\",\n    height: \"39px\",\n    viewBox: \"0 0 50 39\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title === undefined ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, \"Group\") : title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _desc || (_desc = /*#__PURE__*/React.createElement(\"desc\", null, \"Created with Sketch.\")), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"WiP\",\n    stroke: \"none\",\n    strokeWidth: 1,\n    fill: \"none\",\n    fillRule: \"evenodd\"\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Artboard\",\n    transform: \"translate(-90.000000, -38.000000)\"\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Group\",\n    transform: \"translate(90.000000, 38.000000)\"\n  }, /*#__PURE__*/React.createElement(\"polygon\", {\n    id: \"Rectangle\",\n    fill: \"#808282\",\n    points: \"3 14 25 26.5 47 14 40.855176 39 9.08421785 39\"\n  }), /*#__PURE__*/React.createElement(\"polygon\", {\n    id: \"Triangle\",\n    fillOpacity: 0.262838724,\n    fill: \"#101A1A\",\n    points: \"25 8 40 39 10 39\"\n  }), /*#__PURE__*/React.createElement(\"circle\", {\n    id: \"Oval\",\n    fill: \"#5E6363\",\n    cx: 2,\n    cy: 9,\n    r: 2\n  }), /*#__PURE__*/React.createElement(\"circle\", {\n    id: \"Oval\",\n    fill: \"#5E6363\",\n    cx: 25,\n    cy: 2,\n    r: 2\n  }), /*#__PURE__*/React.createElement(\"circle\", {\n    id: \"Oval\",\n    fill: \"#5E6363\",\n    cx: 48,\n    cy: 9,\n    r: 2\n  }))))));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgCrown);\nexport default __webpack_public_path__ + \"static/media/crown.207ae289b221bfaca0108507f9bb2f85.svg\";\nexport { ForwardRef as ReactComponent };","import Skeleton from \"@mui/material/Skeleton\";\r\nimport Stack from \"@mui/material/Stack\";\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <div className=\"flex justify-center items-center h-screen \">\r\n      <Stack spacing={1}>\r\n        <Skeleton variant=\"text\" sx={{ fontSize: \"1rem\" }} />\r\n        <Skeleton variant=\"circular\" width={40} height={40} />\r\n        <Skeleton variant=\"rectangular\" width={210} height={60} />\r\n        <Skeleton variant=\"rounded\" width={210} height={60} />\r\n      </Stack>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import {createSelector} from \"reselect\"\r\n\r\n const catogoriesSelectorReducer = (state) => state.catogories\r\n \r\n export const isLoadingSelector = (state) => state.catogories.isLoading\r\n \r\n export const selectCatogories = (createSelector(\r\n    [catogoriesSelectorReducer],\r\n    (catogoriesSlice) => {\r\n        return catogoriesSlice.catogories\r\n    }))\r\n \r\n\r\nexport const getCatogories = createSelector(\r\n    [selectCatogories],\r\n    (catogories) => {\r\n        return catogories\r\n    }\r\n)\r\n\r\n//  function getCatogories(state){\r\n//     const catogories = state.catogories.catogories\r\n//     return catogories\r\n// }","import { useDispatch, useSelector } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport {\r\n  ADD_ITEM_INTO_CART,\r\n  CART_INCREMENT_CART_COUNT,\r\n  SET_CART_ITEMS_FAILED,\r\n} from \"../../store/cart/cart.actions\";\r\nimport { cartCountSelector, getCartItems } from \"../../store/cart/cartSelector\";\r\nimport { Fragment, useCallback } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport { currentUserSelector } from \"../../store/user/user.selector\";\r\n\r\nconst ProductCard = ({ product }) => {\r\n  const cartData = useSelector(getCartItems);\r\n  const currentUser = useSelector(currentUserSelector)\r\n  const cartCount = useSelector(cartCountSelector);\r\n  const { id, name, imageUrl, price } = product;\r\n  const dispatch = useDispatch();\r\n\r\n  // console.log(currentUser)\r\n\r\n\r\n  const addToCart = useCallback(\r\n    async (productToAdd) => {\r\n      try {\r\n        const cartItem = await axios.post(`/cart`, {\r\n          id: productToAdd.id,\r\n          name: productToAdd.name,\r\n          imageUrl: productToAdd.imageUrl,\r\n          price: productToAdd.price,\r\n        },{\r\n          headers:{\r\n            Authorization:`Bearer ${currentUser.token}`\r\n          }\r\n        });\r\n        toast.success(\"product added successfully\", {\r\n          position: \"top-center\",\r\n          autoClose: 5000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: \"colored\",\r\n        });\r\n        dispatch(ADD_ITEM_INTO_CART(cartItem.data));\r\n        dispatch(CART_INCREMENT_CART_COUNT(cartCount + 1));\r\n      } catch (err) {\r\n        SET_CART_ITEMS_FAILED(err)\r\n      }\r\n    },\r\n    [cartData]\r\n  );\r\n\r\n  return (\r\n    <Fragment key={id}>\r\n        <div className=\"flex-1 relative w-full shadow-lg hover:scale-[1.1] transition-transform\">\r\n          <div\r\n          className=\"bg-gray-400 hover:bg-gray-100\"\r\n            style={{\r\n              backgroundImage: `url(${imageUrl})`,\r\n              width: \"100%\",\r\n              height: \"300px\",\r\n              backgroundRepeat: \"no-repeat\",\r\n              backgroundSize: \"cover\",\r\n              backgroundPosition: \"center\",\r\n              backgroundBlendMode:\"multiply\"\r\n            }}\r\n          ></div>{\" \"}\r\n          <div className=\"absolute top-[40%] bottom-[40%] left-[30%] my-auto mx-auto\">\r\n            <button\r\n              onClick={() => addToCart(product)}\r\n              className=\"bg-white shadow-lg opacity-[.5] rounded-md uppercase font-bold font-sans p-4 hover:opacity-[.7]\"\r\n            >\r\n              add to cart\r\n            </button>\r\n          </div>\r\n          <div className=\"flex justify-evenly items-center uppercase font-mono text-xl font-medium  my-2\">\r\n            <p>{name}</p>\r\n            <p>\r\n              {price}{\" \"}\r\n              <span className=\"uppercase text-green-500 font-bold\">pkr</span>\r\n            </p>\r\n          </div>\r\n        </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ProductCard;\r\n","import { Fragment, useMemo } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {\r\n  getCatogories,\r\n  isLoadingSelector,\r\n} from \"../../store/catogories/catogoriesSelector\";\r\nimport ProductCard from \"../ProductCard/ProducutCard\";\r\nimport { ToastContainer } from \"react-toastify\";\r\n\r\nimport Loader from \"../Loader/Loader\";\r\nimport { currentUserSelector } from \"../../store/user/user.selector\";\r\nimport Signin from \"../Signin/Signin\";\r\nconst Shop = () => {\r\n  const catogoriesData = useSelector(getCatogories);\r\n  const isLoading = useSelector(isLoadingSelector);\r\n  const currentUser = useSelector(currentUserSelector)\r\n\r\n  const catogoriesJSX = useMemo(() => {\r\n    return (\r\n      <>\r\n      {currentUser && <h1 className=\"text-2xl font-bold tracking-wider text-center uppercase font-sans my-8 text-gray-800\">Welcome {currentUser.user.username.split(\" \")[0]} Enjoy Your Shopping with us</h1>}\r\n      <div>\r\n        {Object.keys(catogoriesData).map((title) => {\r\n          return (\r\n            <Fragment key={title}>\r\n              <div className=\"text-center uppercase font-bold text-4xl my-20\">\r\n                {title}\r\n              </div>\r\n              <div className=\"grid grid-col-1  md:grid-cols-3 w-[90%] md:max-w-[95%] mt-10 mx-auto gap-10 md:gap-20 place-items-center\">\r\n                {catogoriesData[title].slice(0, 6).map((product) => {\r\n                  return <ProductCard key={product.name} product={product} />;\r\n                })}\r\n              </div>\r\n              <ToastContainer\r\n                position=\"top-center\"\r\n                autoClose={5000}\r\n                hideProgressBar={false}\r\n                newestOnTop={false}\r\n                closeOnClick\r\n                rtl={false}\r\n                pauseOnFocusLoss\r\n                draggable\r\n                pauseOnHover\r\n                theme=\"colored\"\r\n              />\r\n            </Fragment>\r\n          );\r\n        })}\r\n      </div>\r\n        </>\r\n    );\r\n  }, [catogoriesData,currentUser]);\r\n\r\n  return (\r\n    <div>\r\n     {!currentUser ?   <Signin/> :  <div>{!isLoading ? catogoriesJSX : <Loader />}</div> }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Shop;\r\n","import { useFormik } from \"formik\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { loginSchema } from \"../Stripe-Payment/FormSchema/FormSchema\";\r\nimport { FETCH_USER_SUCCESS } from \"../../store/user/user.actions\";\r\nimport crownIcon from \"../../Assets/crown.svg\";\r\nimport axios from \"axios\";\r\n\r\nconst Signin = () => {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      email: \"\",\r\n      password: \"\",\r\n    },\r\n    validationSchema: loginSchema,\r\n    onSubmit: async (values, action) => {\r\n      try {\r\n        const { data } = await axios.post(\"/auth/login\", {\r\n          email: values.email,\r\n          password: values.password,\r\n        });\r\n        dispatch(FETCH_USER_SUCCESS(data));\r\n        navigate(\"/shop\");\r\n      } catch (err) {\r\n        alert(err);\r\n      }\r\n      action.resetForm();\r\n    },\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <div className=\"flex font-sans flex-col  w-[90%] md:w-[35%] justify-between items-center mx-auto border-2 border-gray-200 p-4 shadow-lg rounded-sm mt-10 text-sm\">\r\n        <div className=\"logo\">\r\n          <img src={crownIcon} alt=\"crown-logo\" />\r\n        </div>\r\n        <h1 className=\"font-sans  font-bold uppercase text-xs md:text-2xl tracking-wide leading-3 my-10\">\r\n          Sign in to your account\r\n        </h1>\r\n        <form\r\n          className=\"flex  w-full flex-col items-center \"\r\n          onSubmit={formik.handleSubmit}\r\n        >\r\n          <input\r\n            className=\"border-2 border-sky-200 w-full p-2 my-2 rounded-md font-mono placeholder-gray-600\"\r\n            id=\"email\"\r\n            name=\"email\"\r\n            type=\"email\"\r\n            placeholder=\"email\"\r\n            onChange={formik.handleChange}\r\n            onBlur={formik.handleBlur}\r\n            value={formik.values.email}\r\n          />\r\n          {formik.touched.email && formik.errors.email ? (\r\n            <div className=\"text-red-700 uppercase font-bold\">\r\n              {formik.errors.email}\r\n            </div>\r\n          ) : null}\r\n\r\n          <input\r\n            className=\"border-2 border-sky-200 w-full p-2 my-2 rounded-md font-mono focus:border-black placeholder-gray-600\"\r\n            id=\"password\"\r\n            name=\"password\"\r\n            type=\"password\"\r\n            placeholder=\"password\"\r\n            onChange={formik.handleChange}\r\n            onBlur={formik.handleBlur}\r\n            value={formik.values.password}\r\n          />\r\n          {formik.touched.password && formik.errors.password ? (\r\n            <div className=\"text-red-700 uppercase font-bold\">\r\n              {formik.errors.password}\r\n            </div>\r\n          ) : null}\r\n          <p className=\"font-sans  mt-5 font-bold text-gray-800 uppercase\">\r\n            dont have an account ?\r\n            <Link\r\n              className=\"ml-2 text-orange-500 hover:text-gray-700 \"\r\n              to=\"/auth\"\r\n            >\r\n              sign up\r\n            </Link>\r\n          </p>\r\n          <button\r\n            className=\"bg-black mt-5 text-white border-2 border-gray-400 hover:bg-white hover:text-black p-2 rounded-md font-sans uppercase font-bold w-[80%] md:w-[50%] transition-colors  ease-in duration-75 \"\r\n            type=\"submit\"\r\n          >\r\n            sign in\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Signin;\r\n","const { object, string, ref, number } = require(\"yup\");\r\n\r\nconst signUpSchema = object({\r\n  displayName: string().min(2).max(20).required(\"plz provide your username\"),\r\n  email: string().email().required(\"plz provide your email address\"),\r\n  password: string().min(6).max(8).required(),\r\n  confirmPassword: string().oneOf([ref(\"password\")]),\r\n});\r\n\r\nconst loginSchema = object({\r\n  email: string().email().required(\"plz provide your email address\"),\r\n  password: string().required(),\r\n});\r\n\r\n\r\nexport  {signUpSchema,loginSchema};\r\n","const USER_ACTION_TYPES = require(\"./user.actionTypes\")\r\n\r\n\r\nconst FETCH_USER_START = () => {\r\n    return {type:USER_ACTION_TYPES.SET_USER_START}\r\n}\r\n\r\nconst FETCH_USER_SUCCESS = (user) =>{\r\n    return {type:USER_ACTION_TYPES.SET_USER_SUCCESS,payload:user}\r\n}\r\n\r\nconst FETCH_USER_FAILED = (err) => {\r\n    return {type:USER_ACTION_TYPES.SET_USER_FAILED,payload:err}\r\n}\r\n\r\nconst SET_USER_LOGOUT = () => {\r\n  return {type:USER_ACTION_TYPES.SET_USER_LOGOUT}   \r\n}\r\n\r\n\r\n\r\nmodule.exports = {\r\n    FETCH_USER_START,\r\n    FETCH_USER_SUCCESS,\r\n    FETCH_USER_FAILED,\r\n    SET_USER_LOGOUT\r\n}"],"names":["_jsx","className","children","_jsxs","Stack","spacing","Skeleton","variant","sx","fontSize","width","height","isLoadingSelector","state","catogories","isLoading","selectCatogories","createSelector","catogoriesSlice","getCatogories","_ref","product","cartData","useSelector","getCartItems","currentUser","currentUserSelector","cartCount","cartCountSelector","id","name","imageUrl","price","dispatch","useDispatch","addToCart","useCallback","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","productToAdd","cartItem","wrap","_context","prev","next","axios","headers","Authorization","concat","token","sent","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","ADD_ITEM_INTO_CART","data","CART_INCREMENT_CART_COUNT","t0","SET_CART_ITEMS_FAILED","stop","_x","apply","arguments","Fragment","style","backgroundImage","backgroundRepeat","backgroundSize","backgroundPosition","backgroundBlendMode","onClick","catogoriesData","catogoriesJSX","useMemo","_Fragment","user","username","split","Object","keys","map","title","slice","ProductCard","ToastContainer","newestOnTop","rtl","pauseOnFocusLoss","Loader","Signin","navigate","useNavigate","formik","useFormik","initialValues","email","password","validationSchema","loginSchema","onSubmit","_onSubmit","values","action","_yield$axios$post","FETCH_USER_SUCCESS","alert","resetForm","_x2","src","crownIcon","alt","handleSubmit","type","placeholder","onChange","handleChange","onBlur","handleBlur","value","touched","errors","Link","to","_require","require","object","string","ref","signUpSchema","number","displayName","min","max","required","confirmPassword","oneOf","USER_ACTION_TYPES","module","exports","FETCH_USER_START","SET_USER_START","SET_USER_SUCCESS","payload","FETCH_USER_FAILED","err","SET_USER_FAILED","SET_USER_LOGOUT"],"sourceRoot":""}