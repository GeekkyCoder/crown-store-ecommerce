{"version":3,"file":"static/js/894.2f2f84ab.chunk.js","mappings":"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","sources":["components/Card/Card.jsx","components/Stripe-Payment/StripePayment.jsx","components/Cart/Cart.jsx","components/Loader/Loader.jsx","../node_modules/@mui/icons-material/DeleteOutline.js"],"sourcesContent":["import { useCallback } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport {\r\n  ADD_ITEM_INTO_CART,\r\n  CART_INCREMENT_CART_COUNT,\r\n  SET_CART_ITEMS_FAILED,\r\n  SET_CART_ITEMS_SUCCESS,\r\n} from \"../../store/cart/cart.actions\";\r\n\r\nimport {\r\n  getCartItems,\r\n  cartCountSelector,\r\n  cartLoadingSelector,\r\n} from \"../../store/cart/cartSelector\";\r\nimport Loader from \"../Loader/Loader\";\r\nimport { currentUserSelector } from \"../../store/user/user.selector\";\r\nimport DeleteOutlineIcon from \"@mui/icons-material/DeleteOutline\";\r\n\r\nconst Card = ({ id, imageUrl, price, name, quantity }) => {\r\n  const cartCount = useSelector(cartCountSelector);\r\n  const isCartLoading = useSelector(cartLoadingSelector);\r\n  const currentUser = useSelector(currentUserSelector);\r\n  const cartData = useSelector(getCartItems);\r\n  const dispatch = useDispatch();\r\n\r\n  const removeItemFromCart = useCallback(\r\n    async (id) => {\r\n      try {\r\n        const cartItemToDelete = await axios.delete(\r\n          `/cart/${id}`,\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${currentUser.token}`,\r\n            },\r\n          }\r\n        );\r\n        const newCartItems = cartData.filter(\r\n          (cartItem) => cartItem.id !== cartItemToDelete.data.id\r\n        );\r\n        dispatch(SET_CART_ITEMS_SUCCESS(newCartItems));\r\n      } catch (err) {\r\n        dispatch(SET_CART_ITEMS_FAILED(err));\r\n      }\r\n    },\r\n    [cartData]\r\n  );\r\n\r\n  const updateCartQuantityBy1 = useCallback(\r\n    async (productId) => {\r\n      //update the quantityBy1\r\n      const items = cartData.map((cartItem) => {\r\n        return cartItem.id === productId\r\n          ? { ...cartItem, quantity: cartItem.quantity + 1 }\r\n          : cartItem;\r\n      });\r\n\r\n      const product = items.find((cartItem) => cartItem.id === productId);\r\n\r\n      try {\r\n        const updatedCartItem = await axios.put(\r\n          `/cart/${product.id}`,\r\n          {\r\n            quantity: product.quantity,\r\n          },\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${currentUser.token}`,\r\n            },\r\n          }\r\n        );\r\n        dispatch(ADD_ITEM_INTO_CART(updatedCartItem));\r\n        dispatch(CART_INCREMENT_CART_COUNT(cartCount + 1));\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    },\r\n    [cartData]\r\n  );\r\n\r\n  const removeCartQuantityBy1 = useCallback(\r\n    async (productId) => {\r\n      //update the quantityBy1\r\n      const items = cartData.map((cartItem) => {\r\n        return cartItem.id === productId\r\n          ? { ...cartItem, quantity: cartItem.quantity - 1 }\r\n          : cartItem;\r\n      });\r\n\r\n      const product = items.find((cartItem) => cartItem.id === productId);\r\n\r\n      try {\r\n        const updatedCartItem = await axios.put(\r\n          `/cart/${product.id}`,\r\n          {\r\n            quantity: product.quantity,\r\n          },\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${currentUser.token}`,\r\n            },\r\n          }\r\n        );\r\n        dispatch(ADD_ITEM_INTO_CART(updatedCartItem));\r\n        dispatch(CART_INCREMENT_CART_COUNT(cartCount - 1));\r\n      } catch (err) {\r\n        dispatch(SET_CART_ITEMS_FAILED(err));\r\n      }\r\n    },\r\n    [cartData]\r\n  );\r\n\r\n\r\n  return (\r\n    <>\r\n      {!isCartLoading ? (\r\n        <div className=\"relative flex flex-col md:flex-row justify-center items-center mt-10 border-2 uppercase font-mono font-bold text-xl p-5 tracking-wide\">\r\n          <div className=\"w-30%\">\r\n            <img\r\n              className=\"w-[200px] rounded-md hover:opacity-[.5] hover:cursor-pointer transition-opacity\"\r\n              src={imageUrl}\r\n              alt={name}\r\n            />\r\n            <p className=\"text-center mt-5\">{name}</p>\r\n          </div>\r\n          <div className=\"w-full md:w-[20%] md:ml-10  flex justify-between items-center my-5\">\r\n            <div\r\n              onClick={() => updateCartQuantityBy1(id)}\r\n              className=\" text-white hover:cursor-pointer w-[30px] h-[30px] rounded-[50%] bg-green-600 flex justify-center items-center\"\r\n            >\r\n              +\r\n            </div>\r\n            <p>{quantity}</p>\r\n            <div\r\n              onClick={() => removeCartQuantityBy1(id)}\r\n              className=\"text-white hover:cursor-pointer w-[30px] h-[30px] rounded-[50%] bg-red-600 flex justify-center items-center\"\r\n            >\r\n              -\r\n            </div>\r\n          </div>\r\n          <p className=\"mt-5 absolute top-[75%]\">${price}</p>\r\n          <div className=\"mt-20 md:mt-0 md:ml-20\">\r\n            <button\r\n              onClick={() => removeItemFromCart(id)}\r\n              className=\"bg-black text-white p-2 w-[250px] md:w-[200px] rounded-sm hover:cursor-pointer hover:bg-white hover:text-black border-2 border-gray-400\"\r\n            >\r\n              <DeleteOutlineIcon\r\n                onClick={() => removeItemFromCart(id)}\r\n                className=\"mr-2\"\r\n              />\r\n              remove\r\n            </button>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <Loader />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import { useState } from \"react\";\r\nimport { CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { currentUserSelector } from \"../../store/user/user.selector\";\r\nimport { cartTotalPriceSelector } from \"../../store/cart/cartSelector\";\r\nimport { toast } from \"react-toastify\";\r\nimport axios from \"axios\";\r\n\r\nfunction StripePayment() {\r\n  const currentUser = useSelector(currentUserSelector);\r\n  const totalPrice = useSelector(cartTotalPriceSelector);\r\n\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n\r\n  const paymentHandler = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!stripe || !elements) {\r\n      return;\r\n    }\r\n\r\n    const { data } = await axios.post(\r\n      \"/stripe/payment\",\r\n      {\r\n        amount: totalPrice * 100,\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `Bearer ${currentUser.token}`,\r\n        },\r\n      }\r\n    );\r\n\r\n    const clientSecret = data.clientSecret;\r\n\r\n    const paymentResult = await stripe.confirmCardPayment(clientSecret, {\r\n      payment_method: {\r\n        card: elements.getElement(CardElement),\r\n        billing_details: {\r\n          name: currentUser.user.username,\r\n        },\r\n      },\r\n    });\r\n\r\n    if (paymentResult.error) {\r\n      if (\r\n        paymentResult.error.code &&\r\n        paymentResult.error.code === \"incomplete_number\"\r\n      ) {\r\n        toast.error(\"incomplete_number\", {\r\n          position: \"top-center\",\r\n          autoClose: 3000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: \"colored\",\r\n        });\r\n      }\r\n      if (\r\n        paymentResult.error.type &&\r\n        paymentResult.error.type === \"validation_error\"\r\n      ) {\r\n        toast.error(\"All fields must be filled\", {\r\n          position: \"top-center\",\r\n          autoClose: 3000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: \"colored\",\r\n        });\r\n      }\r\n    } else {\r\n      if (paymentResult.paymentIntent.status === \"succeeded\") {\r\n        toast.success(\"payment successfull ✔\", {\r\n          position: \"top-center\",\r\n          autoClose: 3000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: \"colored\",\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"my-10 font-sans\">\r\n      <form className=\"mt-20 w-[300px] md:w-[500px] mx-auto\" onSubmit={paymentHandler}>\r\n        <h2 className=\"text-center my-5 text-[1.4rem] md:text-[2rem] font-bold\">\r\n          Credit-Card Payment\r\n        </h2>\r\n        <p className=\"font-semibold text-[18px] text-gray-700 font-mono\">\r\n          Welcome{\" \"}\r\n          {currentUser.user.username.charAt(0).toUpperCase() +\r\n            currentUser.user.username.slice(1)}\r\n          ,{\" \"}\r\n          <span className=\"block my-2\">\r\n            please do not provide your real bank details here\r\n          </span>{\" \"}\r\n        </p>\r\n        <p className=\"text-gray-700 my-4 text-center text-[18px] font-mono \">\r\n          Test: 4242 4242 4242 4242\r\n        </p>\r\n        <CardElement className=\"w-[80%] mx-auto mt-5\" />\r\n        <button\r\n          className=\"bg-black w-1/2 \r\n           text-white p-2 rounded-md mt-6 mx-auto block hover:bg-gray-700 hover:shadow-lg hover:text-white hover:scale-[0.95]\"\r\n        >\r\n          Pay Now\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default StripePayment;\r\n","import { useEffect } from \"react\";\r\n\r\nimport Card from \"../Card/Card\";\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport {\r\n  getCartItems,\r\n  cartTotalPriceSelector,\r\n} from \"../../store/cart/cartSelector\";\r\nimport { currentUserSelector } from \"../../store/user/user.selector\";\r\nimport { SET_CART_TOTAL_PRICE } from \"../../store/cart/cart.actions\";\r\nimport StripePayment from \"../Stripe-Payment/StripePayment\";\r\n\r\nconst Cart = () => {\r\n  const cartData = useSelector(getCartItems);\r\n  const currentUser = useSelector(currentUserSelector);\r\n  const cartPrice = useSelector(cartTotalPriceSelector);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    const newPrice = cartData.reduce((acc, item) => {\r\n      const price = Number(item.price) * item.quantity + acc;\r\n      return price;\r\n    }, 0);\r\n    dispatch(SET_CART_TOTAL_PRICE(newPrice));\r\n  }, [cartData]);\r\n\r\n  return (\r\n    <>\r\n      {cartData.length ? (\r\n        <div className=\"w-full md:w-[70%] mx-auto p-10 \">\r\n          <h1 className=\"text-center uppercase font-mono text-xl md:text-4xl font-bold my-5\">\r\n            Your Cart\r\n          </h1>\r\n          {cartData.map(({ id, name, imageUrl, price, quantity }) => {\r\n            return (\r\n              <Card\r\n                key={id}\r\n                id={id}\r\n                name={name}\r\n                imageUrl={imageUrl}\r\n                price={price}\r\n                quantity={quantity}\r\n              />\r\n            );\r\n          })}\r\n          <div className=\"flex justify-end ml-auto  uppercase text-2xl font-bold mt-20\">\r\n            Your Sub Total : ${cartPrice}\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div className=\"flex justify-center items-center h-screen uppercase font-sans text-4xl font-bold\">\r\n          No item to show\r\n        </div>\r\n      )}\r\n      <StripePayment/>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n","import Skeleton from \"@mui/material/Skeleton\";\r\nimport Stack from \"@mui/material/Stack\";\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <div className=\"flex justify-center items-center h-screen \">\r\n      <Stack spacing={1}>\r\n        <Skeleton variant=\"text\" sx={{ fontSize: \"1rem\" }} />\r\n        <Skeleton variant=\"circular\" width={40} height={40} />\r\n        <Skeleton variant=\"rectangular\" width={210} height={60} />\r\n        <Skeleton variant=\"rounded\" width={210} height={60} />\r\n      </Stack>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM8 9h8v10H8V9zm7.5-5-1-1h-5l-1 1H5v2h14V4z\"\n}), 'DeleteOutline');\nexports.default = _default;"],"names":["_ref","id","imageUrl","price","name","quantity","cartCount","useSelector","cartCountSelector","isCartLoading","cartLoadingSelector","currentUser","currentUserSelector","cartData","getCartItems","dispatch","useDispatch","removeItemFromCart","useCallback","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","cartItemToDelete","newCartItems","wrap","_context","prev","next","axios","concat","headers","Authorization","token","sent","filter","cartItem","data","SET_CART_ITEMS_SUCCESS","t0","SET_CART_ITEMS_FAILED","stop","_x","apply","arguments","updateCartQuantityBy1","_ref3","_callee2","productId","items","product","updatedCartItem","_context2","map","_objectSpread","find","ADD_ITEM_INTO_CART","CART_INCREMENT_CART_COUNT","console","log","_x2","removeCartQuantityBy1","_ref4","_callee3","_context3","_x3","_jsx","_Fragment","children","Loader","_jsxs","className","src","alt","onClick","DeleteOutlineIcon","totalPrice","cartTotalPriceSelector","stripe","useStripe","elements","useElements","paymentHandler","e","_yield$axios$post","clientSecret","paymentResult","preventDefault","abrupt","amount","confirmCardPayment","payment_method","card","getElement","CardElement","billing_details","user","username","error","code","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","type","paymentIntent","status","onSubmit","charAt","toUpperCase","slice","cartPrice","useEffect","newPrice","reduce","acc","item","Number","SET_CART_TOTAL_PRICE","length","Card","StripePayment","Stack","spacing","Skeleton","variant","sx","fontSize","width","height","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}